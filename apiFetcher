class apiFetcher:
    def apiFetcher(self, lang="fi", download=False, query):
        
        self.lang = lang
        self.download = download
        self.query = query
    
    #Everything fetched through Vipunens API need to use the Finnish query words
    areas = [
      "avoin_yliopisto", 
      "erilliset_opinto_oikeudet",
      "suoritteet",
      "toimipisteet",
      "avoin_amk",
      "amk_talous",
      "koulutusluokitus",
      "yo_talous",
      "suorittanut55",
      "ytl_arvosanat",
      "harjoittelukoulut",
      "alayksikkokoodisto",
      "koulutuksenkustannukset",
      "toimitilat",
      "henkilosto",
      "muu_henkilosto_amk",
      "taydennyskoulutukset",
      "opinnaytetyot",
      "julkaisut"
    ]

    areas_sv = {
      "öppna universitetet":"avoin_yliopisto", 
      "fristående studier":"erilliset_opinto_oikeudet",
      "prestationer":"suoritteet",
      "Verksamhetsställen":"toimipisteet",
      "öppna yrkeshögskolan":"avoin_amk",
      "yrkeshögskolan ekonomi":"amk_talous",
      "utbildningsklacificering":"koulutusluokitus",
      "universitet ekonomi":"yo_talous",
      "???":"suorittanut55",
      "vitsord av något slag":"ytl_arvosanat",
      "övningsskolor":"harjoittelukoulut",
      "underenhetskoder":"alayksikkokoodisto",
      "utbildningsutgifter":"koulutuksenkustannukset",
      "verksamhetsområden":"toimitilat",
      "personal":"henkilosto",
      "övrig personal yrkeshögskolan":"muu_henkilosto_amk",
      "någon utbildning":"taydennyskoulutukset",
      "avhandlingar":"opinnaytetyot",
      "publikationer":"julkaisut"
    }

    areas_en = {  "open university":"avoin_yliopisto", 
      "non-degree studies":"erilliset_opinto_oikeudet",
      "performances":"suoritteet",
      "offices":"toimipisteet",
      "open polytechnics":"avoin_amk",
      "polytechninc economy":"amk_talous",
      "education classes":"koulutusluokitus",
      "university economy":"yo_talous",
      "TODO: Check this one":"suorittanut55",
      "And this one":"ytl_arvosanat",
      "practice schools":"harjoittelukoulut",
      "sublevelunit codes":"alayksikkokoodisto",
      "educational expences":"koulutuksenkustannukset",
      "agencies":"toimitilat",
      "staff":"henkilosto",
      "misc staff":"muu_henkilosto_amk",
      "filling education":"taydennyskoulutukset",
      "thesises":"opinnaytetyot",
      "publications":"julkaisut"
        }
    
    def area_to_work_with(area):
        #This function does not download files and save them locally, but work with them in the computer's memory


    def initiate_download(area_to_download=query):
        if area_to_download in areas:
            for namn in areas:
              api = "http://api.vipunen.fi/api/resources/" + area_to_download + "/data"
              json_data = requests.get(api).json()
              with open(namn + ".json", "w") as filen:
                json.dump(json_data ,filen)
            else:
                print("Error: Name not in Vipunen. \n Try again or enter X to see list of available names")